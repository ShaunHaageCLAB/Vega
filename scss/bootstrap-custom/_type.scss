//
// Typography
// --------------------------------------------------
input[type=button], input[type=reset], input[type=submit], button {
	min-width: auto;

	&:focus {
		outline: none;
	}
}

// Headings
// -------------------------

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6, 
.h1-uppercase, .h2-uppercase, .h3-uppercase, .h4-uppercase, .h5-uppercase, .h6-uppercase,
.h1-light, .h2-light, .h3-light, .h4-light, .h5-light, .h6-light {
  margin: 0;
  font-family: $headings-font-family;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  font-weight: 700;
}

.h1-uppercase, .h2-uppercase, .h3-uppercase, .h4-uppercase, .h5-uppercase, .h6-uppercase {
	text-transform: uppercase;
}
.h1-light, .h2-light, .h3-light, .h4-light, .h5-light, .h6-light {
	font-weight: 400;
}

h1, .h1, .h1-uppercase, .h1-light,
h2, .h2, .h2-uppercase, .h2-light,
h3, .h3, .h3-uppercase, .h3-light,
h4, .h4, .h4-uppercase, .h4-light,
h5, .h5, .h5-uppercase, .h5-light,
h6, .h6, .h6-uppercase, .h6-light {
  margin-bottom: ($line-height-computed / 2);
}

h1, .h1, .h1-uppercase, .h1-light { font-size: $font-size-h1; }
h2, .h2, .h2-uppercase, .h2-light { font-size: $font-size-h2; }
h3, .h3, .h3-uppercase, .h3-light { font-size: $font-size-h3; }
h4, .h4, .h4-uppercase, .h4-light { font-size: $font-size-h4; }
h5, .h5, .h5-uppercase, .h5-light { font-size: $font-size-h5; }
h6, .h6, .h5-uppercase, .h5-light { font-size: $font-size-h6; }

.section__heading,
.section__heading-socialmedia,
.section__heading-events {
	padding: 0 30px;
	padding-bottom: 0;
	line-height: 1;
	height: 95px;
	display: flex;
	align-items: center;
	@extend .h4-uppercase;
}


.section__heading {
	background-color: $gray-dark;
	color: $white;
}

.section__heading-socialmedia {
	background-color: $white;
	justify-content: space-between;
}

.section__heading-events {
	@include primary-bg; 
	justify-content: center;
}

// Body text
// -------------------------

p {
  margin: 0 0 ($line-height-computed * 2);
}

.lead {
  margin-bottom: $line-height-computed;
  font-size: floor(($font-size-base * 1.15));
  font-weight: 300;
  line-height: 1.4;

  @media (min-width: $screen-sm-min) {
    font-size: ($font-size-base * 1.5);
  }
}




// Emphasis & misc
// -------------------------

// Ex: (12px small font / 14px base font) * 100% = about 85%
small,
.small {
  font-size: floor((100% * $font-size-small / $font-size-base));
}

mark,
.mark {
  background-color: $state-warning-bg;
  padding: .2em;
}

// Alignment
.text-left           { text-align: left; }
.text-right          { text-align: right; }
.text-center         { text-align: center; }
.text-justify        { text-align: justify; }
.text-nowrap         { white-space: nowrap; }

@media (max-width: $screen-xs-max) { 
	.text-left-xs           { text-align: left; }
	.text-right-xs          { text-align: right; }
	.text-center-xs         { text-align: center; }
	.text-justify-xs        { text-align: justify; }
	.text-nowrap-xs         { white-space: nowrap; } 
}

@media (min-width: $screen-xs-max) and (max-width: $screen-sm-max) { 
	.text-left-sm           { text-align: left; }
	.text-right-sm          { text-align: right; }
	.text-center-sm         { text-align: center; }
	.text-justify-sm        { text-align: justify; }
	.text-nowrap-sm         { white-space: nowrap; }
}

// Transformation
.text-lowercase      { text-transform: lowercase; }
.text-uppercase      { text-transform: uppercase; }
.text-capitalize     { text-transform: capitalize; }

// Contextual colors
.text-muted {
  color: $text-muted;
}

.text-white {
	color: $white;
}
.text-yellow {
	color: #fde13c;
}

.text-color-primary {
	color: $brand-primary;
}

.text-color-inverse {
	color: $white;
}

.text-teal {
	color: $teal;
}

.text-gray {
	color: $gray-darker;
}

@include text-emphasis-variant('.text-primary', $brand-primary);
@include text-emphasis-variant('.text-success', $state-success-text);
@include text-emphasis-variant('.text-info', $state-info-text);
@include text-emphasis-variant('.text-warning', $state-warning-text);
@include text-emphasis-variant('.text-danger', $state-danger-text);

// Contextual backgrounds
// For now we'll leave these alongside the text classes until v4 when we can
// safely shift things around (per SemVer rules).
.bg-primary {
  color: $white;
}

@include bg-variant('.bg-primary', $brand-primary);
@include bg-variant('.bg-success', $state-success-bg);
@include bg-variant('.bg-info', $state-info-bg);
@include bg-variant('.bg-warning', $state-warning-bg);
@include bg-variant('.bg-danger', $state-danger-bg);


// Page header
// -------------------------

.page-header {
  padding-bottom: (($line-height-computed / 2) - 1);
  margin: ($line-height-computed * 2) 0 $line-height-computed;
  border-bottom: 1px solid $page-header-border-color;
}


hr {
	border-color: $brand-primary;
	margin: 0 $grid-gutter-width;
}

// Lists
// -------------------------

// Unordered and Ordered lists
ul,
ol {
  margin-top: 0;
  margin: 0 0 ($line-height-computed * 2);
  ul,
  ol {
    margin: 0 0 ($line-height-computed);
  }
}

// List options

// [converter] extracted from `.list-unstyled` for libsass compatibility
@mixin list-unstyled {
  padding-left: 0;
  list-style: none;
}
// [converter] extracted as `@mixin list-unstyled` for libsass compatibility
.list-unstyled {
  @include list-unstyled;
}


// Inline turns list items into inline-block
.list-inline {
  @include list-unstyled;
  margin-left: -5px;

  > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
  }
}

// Description Lists
dl {
  margin-top: 0; // Remove browser default
  margin-bottom: $line-height-computed;
}
dt,
dd {
  line-height: $line-height-base;
}
dt {
  font-weight: bold;
}
dd {
  margin-left: 0; // Undo browser default
}

// Horizontal description lists
//
// Defaults to being stacked without any of the below styles applied, until the
// grid breakpoint is reached (default of ~768px).

.dl-horizontal {
  dd {
    @include clearfix; // Clear the floated `dt` if an empty `dd` is present
  }

  @media (min-width: $dl-horizontal-breakpoint) {
    dt {
      float: left;
      width: ($dl-horizontal-offset - 20);
      clear: left;
      text-align: right;
      @include text-overflow;
    }
    dd {
      margin-left: $dl-horizontal-offset;
    }
  }
}


// Misc
// -------------------------

// Abbreviations and acronyms
abbr[title],
// Add data-* attribute to help out our tooltip plugin, per https://github.com/twbs/bootstrap/issues/5257
abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted $abbr-border-color;
}
.initialism {
  font-size: 90%;
  @extend .text-uppercase;
}

// Blockquotes
blockquote {
  padding: ($line-height-computed / 2) $line-height-computed;
  margin: 0 0 $line-height-computed;
  font-size: $blockquote-font-size;
  font-style: italic;
  color: $brand-primary-alt;
  position: relative;
  display: block;

  	&:after,
	&:before {	
		font-family: serif;
		content: '"';
	}

  p,
  ul,
  ol {
    &:last-child {
      margin-bottom: 0;
    }
  }

  // Note: Deprecated small and .small as of v3.1.0
  // Context: https://github.com/twbs/bootstrap/issues/11660
  footer,
  small,
  .small {
    display: block;
    font-size: 80%; // back to default font-size
    line-height: $line-height-base;
    color: $blockquote-small-color;

    &:before {
      content: '\2014 \00A0'; // em dash, nbsp
    }
  }
}

img {
	max-width: 100%;
	height: auto;
}

// Opposite alignment of blockquote
//
// Heads up: `blockquote.pull-right` has been deprecated as of v3.1.0.
.blockquote-reverse,
blockquote.pull-right {
  padding-right: 15px;
  padding-left: 0;
  border-right: 5px solid $blockquote-border-color;
  border-left: 0;
  text-align: right;

  // Account for citation
  footer,
  small,
  .small {
    &:before { content: ''; }
    &:after {
      content: '\00A0 \2014'; // nbsp, em dash
    }
  }
}

// Addresses
address {
  margin-bottom: $line-height-computed;
  font-style: normal;
  line-height: $line-height-base;
}
